#if !defined(AFX_PVCALENDAR_H__660A30DF_0AFA_11D4_9DE2_00A0CC3A1AD6__INCLUDED_)
#define AFX_PVCALENDAR_H__660A30DF_0AFA_11D4_9DE2_00A0CC3A1AD6__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;
class CPicture;

/////////////////////////////////////////////////////////////////////////////
// CPVCalendar wrapper class

class CPVCalendar : public CWnd
{
protected:
	DECLARE_DYNCREATE(CPVCalendar)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x22acd16f, 0x99eb, 0x11d2, { 0x9b, 0xb3, 0x0, 0x40, 0x5, 0x61, 0xd9, 0x75 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	DATE GetValue();
	void SetValue(DATE newValue);
	long GetBorderStyle();
	void SetBorderStyle(long nNewValue);
	short GetAppearance();
	void SetAppearance(short nNewValue);
	unsigned long GetHeaderBackColor();
	void SetHeaderBackColor(unsigned long newValue);
	unsigned long GetHeaderForeColor();
	void SetHeaderForeColor(unsigned long newValue);
	unsigned long GetDisplayBackColor();
	void SetDisplayBackColor(unsigned long newValue);
	unsigned long GetDayBackColor();
	void SetDayBackColor(unsigned long newValue);
	unsigned long GetDayForeColor();
	void SetDayForeColor(unsigned long newValue);
	unsigned long GetDisplayForeColor();
	void SetDisplayForeColor(unsigned long newValue);
	short GetFrame();
	void SetFrame(short nNewValue);
	short GetSelectMode();
	void SetSelectMode(short nNewValue);
	unsigned long GetSelectedDayForeColor();
	void SetSelectedDayForeColor(unsigned long newValue);
	unsigned long GetSelectedDayBackColor();
	void SetSelectedDayBackColor(unsigned long newValue);
	short GetDisplayFormat();
	void SetDisplayFormat(short nNewValue);
	short GetDateOrientation();
	void SetDateOrientation(short nNewValue);
	short GetCustomTextOrientation();
	void SetCustomTextOrientation(short nNewValue);
	short GetFirstDay();
	void SetFirstDay(short nNewValue);
	long GetSelectedDateCount();
	unsigned long GetDOWForeColor(short iDOW);
	void SetDOWForeColor(short iDOW, unsigned long newValue);
	unsigned long GetDOWBackColor(short iDOW);
	void SetDOWBackColor(short iDOW, unsigned long newValue);
	CString GetDOWText(short iDOW);
	void SetDOWText(short iDOW, LPCTSTR lpszNewValue);
	CString GetMonthText(short iMonth);
	void SetMonthText(short iMonth, LPCTSTR lpszNewValue);
	unsigned long GetDOWTextColor(short iDOW);
	void SetDOWTextColor(short iDOW, unsigned long newValue);
	void GetYearRange(short* nLowerYear, short* nUpperYear);
	void SetYearRange(short nLowerYear, short nUpperYear, short nCurrentYear);
	unsigned long GetDATEForeColor(DATE Date);
	void SetDATEForeColor(DATE Date, unsigned long newValue);
	unsigned long GetDATEBackColor(DATE Date);
	void SetDATEBackColor(DATE Date, unsigned long newValue);
	CString GetDATEText(DATE Date);
	void SetDATEText(DATE Date, LPCTSTR lpszNewValue);
	unsigned long GetDayOfYearBackColor(DATE Date);
	void SetDayOfYearBackColor(DATE Date, unsigned long newValue);
	unsigned long GetDayOfYearForeColor(DATE Date);
	void SetDayOfYearForeColor(DATE Date, unsigned long newValue);
	CString GetDayOfYearText(DATE Date);
	void SetDayOfYearText(DATE Date, LPCTSTR lpszNewValue);
	unsigned long GetDayOfMonthBackColor(DATE Date);
	void SetDayOfMonthBackColor(DATE Date, unsigned long newValue);
	unsigned long GetDayOfMonthForeColor(DATE Date);
	void SetDayOfMonthForeColor(DATE Date, unsigned long newValue);
	CString GetDayOfMonthText(DATE Date);
	void SetDayOfMonthText(DATE Date, LPCTSTR lpszNewValue);
	DATE GetNextSelectedDate(DATE Date);
	VARIANT GetDataVariant(DATE Date);
	void SetDataVariant(DATE Date, const VARIANT& newValue);
	COleFont GetHeaderFont();
	void SetHeaderFont(LPDISPATCH newValue);
	void SetRefHeaderFont(LPDISPATCH newValue);
	COleFont GetDOWFont();
	void SetDOWFont(LPDISPATCH newValue);
	void SetRefDOWFont(LPDISPATCH newValue);
	COleFont GetDaysFont();
	void SetDaysFont(LPDISPATCH newValue);
	void SetRefDaysFont(LPDISPATCH newValue);
	COleFont GetDATEFont(DATE Date);
	void SetDATEFont(DATE Date, LPDISPATCH newValue);
	void SetRefDATEFont(DATE Date, LPDISPATCH newValue);
	COleFont GetDayOfYearFont(DATE Date);
	void SetDayOfYearFont(DATE Date, LPDISPATCH newValue);
	void SetRefDayOfYearFont(DATE Date, LPDISPATCH newValue);
	COleFont GetDayOfMonthFont(DATE Date);
	void SetDayOfMonthFont(DATE Date, LPDISPATCH newValue);
	void SetRefDayOfMonthFont(DATE Date, LPDISPATCH newValue);
	CPicture GetDATEImage(DATE Date);
	void SetDATEImage(DATE Date, LPDISPATCH newValue);
	void SetRefDATEImage(DATE Date, LPDISPATCH newValue);
	CPicture GetDayOfMonthImage(DATE Date);
	void SetDayOfMonthImage(DATE Date, LPDISPATCH newValue);
	void SetRefDayOfMonthImage(DATE Date, LPDISPATCH newValue);
	CPicture GetDayOfYearImage(DATE Date);
	void SetDayOfYearImage(DATE Date, LPDISPATCH newValue);
	void SetRefDayOfYearImage(DATE Date, LPDISPATCH newValue);
	BOOL GetRedraw();
	void SetRedraw(BOOL bNewValue);
	void AttachDayView(LPDISPATCH DayView);
	short GetImageOrientation();
	void SetImageOrientation(short nNewValue);
	CPicture GetDOWImage(short iDOW);
	void SetDOWImage(short iDOW, LPDISPATCH newValue);
	void SetRefDOWImage(short iDOW, LPDISPATCH newValue);
	BOOL Load(LPCTSTR FileName, long Options);
	BOOL Save(LPCTSTR FileName, long Options);
	VARIANT GetVariantValue();
	void SetVariantValue(const VARIANT& newValue);
	BOOL GetDATESelected(DATE Date);
	void SetDATESelected(DATE Date, BOOL bNewValue);
	BOOL GetMultiLineText();
	void SetMultiLineText(BOOL bNewValue);
	long GetEditMode();
	void SetEditMode(long nNewValue);
	COleFont GetTextFont();
	void SetTextFont(LPDISPATCH newValue);
	void SetRefTextFont(LPDISPATCH newValue);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_PVCALENDAR_H__660A30DF_0AFA_11D4_9DE2_00A0CC3A1AD6__INCLUDED_)
